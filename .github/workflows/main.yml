name: CI
on:
  pull_request:
    types: [synchronize]
  pull_request_review:
    types: [submitted]

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: my
  #       env:
  #         testvar: ${{ toJSON(github) }}
  #       run: echo testvar
  checkApproves:
    if: github.event_name == 'pull_request' || github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: checkApproves
        name: 'Check Approves'
        uses: './.github/actions/custom-action'
        with:
          approve_count: 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      approved: ${{ steps.checkApproves.outputs.data }}
  build:
    needs: checkApproves
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    if: ${{ needs.checkApproves.outputs.approved == 'true' || github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Sleep for 60 seconds
        run: sleep 60s
        shell: bash

      # # Runs a single command using the runners shell
      # - name: Run a one-line script
      #   env:
      #     test: '${{toJSON(github)}}'
      #   run: echo 'dd'

      # # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.
